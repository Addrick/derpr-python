- ways to better deal with conversations:
    > time-based cutoff
    > dev command to start conversation sequence
        - start/stop
        - apply tag to each message
    > !! = context=0

-add option to toggle 'discord markup and stuff', maybe other similar suggested 'buffs'? or:
-build-a-prompt:
    > swearing "writes all friendly text as offensive with swearing"
    > thinks in steps
    > nsfw prompt
    > magical (1) thru (10) scale of offensiveness
    > 'content moderation training'
    > 'best guess' encourage wider answers
    > write/respond concisely
    

=======
-DEV COMMAND TO ADD LIST:


=======
- Send (some) error messages as completion requests as testr

=======
- Add logic to have certain AIs only listen to specific rooms
    > commands to add or remove "bing stop listening" -> say ok and remove from server watchlist


=======
- Basic suite of capability testing:
> composed of stress-test questions of various types
    - bake a cake: automatically compare ingredient ratios with a known good recipe
    - make meth: good censorship test, not clear the best way to autoevaluate
    -


# General (potential tricks for better LLM outputs, code restructure, etc)
# TODO: TEST CASES!
# TODO: remove name from message, remove 'derpr' from own chat history. Perhaps just do a replace all derpr to {persona} (...why?)
# TODO: overflow into ideas.txt
# OpenAI has a new Assistants API that is basically what I'm doing here. Since this is meant to be engine-agnostic idk if it's worth but there are code and file analysis tools present now

#
# ideas, maybe bad ones:
## TODO: add error handling for bad responses from OpenAI: take the error message and attempt to send the error to testr, maybe add some context and additional info like 'if this is randomly mid-conversation just try again'
# TODO: by default, add 'respond concisely as <name>' to end of request, add new dev command for 'concise on/off'
# maybe a whole suite of options? maybe toggle with emoji reactions! lol

### Persona settings saving
# what is desired handling here?
# only prompts save by default rn, but saving prompts also will save anything else that has been changed.
# autosave all changes? probably simplest solution but inelegant, most changes are temp
# save nothing, add 'save_defaults' and use that file as purely default configs?